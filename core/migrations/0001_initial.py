# Generated by Django 3.0.7 on 2020-07-11 11:09

import core.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=200, unique=True)),
                ('is_employer', models.BooleanField(default=False)),
                ('is_employee', models.BooleanField(default=False)),
                ('position', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('date_of_birth', models.DateField(blank=True, default=None, null=True)),
                ('national_id', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('kra_pin', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('terms_accepted', models.BooleanField(default=False)),
                ('relationships', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('channel_name', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('asset', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='freelancer', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('bio', models.TextField(blank=True, max_length=500, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('vehicle', models.CharField(blank=True, choices=[('Car', 'Car'), ('Scooter', 'Scooter'), ('Bicycle', 'Bicycle'), ('Motorcycle', 'Motorcycle'), ('Other', 'Other')], max_length=100, null=True)),
                ('active_hours', models.CharField(blank=True, max_length=100, null=True)),
                ('is_available', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('trips', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('profile_pic', models.ImageField(blank=True, default='profile_pics/no-img.jpg', null=True, upload_to='profile_pics')),
                ('id_doc', models.FileField(blank=True, null=True, upload_to=core.models.id_path)),
                ('freelancer_total_rating', models.FloatField(blank=True, null=True)),
                ('newsletter_optin', models.BooleanField(default=True)),
                ('new_messages', models.IntegerField(default=0)),
                ('is_approved', models.BooleanField(default=False)),
                ('paypal_account', models.CharField(max_length=100, null=True)),
                ('payment_via_phone', models.BooleanField(default=False)),
                ('preferred_payment_method', models.CharField(choices=[('Bank', 'Bank'), ('Phone', 'Phone'), ('PayPal', 'PayPal'), ('Other', 'Other')], default='Bank', max_length=100)),
            ],
            options={
                'verbose_name': 'Freelancer Profile',
                'verbose_name_plural': 'Freelancer Profiles',
            },
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='business', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('business_name', models.CharField(blank=True, max_length=200, null=True)),
                ('number_of_employees', models.IntegerField(blank=True, default=0, null=True)),
                ('business_category', models.CharField(blank=True, choices=[('Restaurant', 'Restaurant'), ('Cothing', 'Clothing'), ('Convenience', 'Convenience'), ('Grocery', 'Grocery'), ('Office', 'Office'), ('Other', 'Other')], max_length=50, null=True)),
                ('street', models.CharField(blank=True, max_length=100, null=True)),
                ('building_number', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('business_total_rating', models.FloatField(blank=True, null=True)),
                ('b_freelancers', models.CharField(blank=True, max_length=500, null=True)),
                ('profile_pic', models.ImageField(blank=True, default='profile_pics/no-img.jpg', null=True, upload_to='profile_pics')),
                ('newsletter_optin', models.BooleanField(default=True)),
                ('new_messages', models.IntegerField(default=0)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Business Profile',
                'verbose_name_plural': 'Business Profiles',
            },
        ),
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('full_name_in_native_language', models.CharField(max_length=100)),
                ('name_on_the_account', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('account_ownership', models.BooleanField()),
                ('national_id_number', models.CharField(blank=True, max_length=100, null=True)),
                ('iban', models.CharField(blank=True, max_length=100, null=True)),
                ('swift', models.CharField(max_length=100)),
                ('account_number', models.CharField(max_length=100)),
                ('bank_details_freelancer', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='core.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='AssignedAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.Asset')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Employee')),
            ],
        ),
        migrations.AddField(
            model_name='asset',
            name='employer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Employer'),
        ),
    ]
